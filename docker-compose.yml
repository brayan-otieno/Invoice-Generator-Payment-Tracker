version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=invoice_app
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - app-network

  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://admin:password@mongodb:27017/invoice_app?authSource=admin
      - JWT_SECRET=your_jwt_secret_here
    volumes:
      - ./server:/app/server
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    stdin_open: true
    tty: true
    restart: unless-stopped

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./client/build:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
